bool isDivisibleBy10 ( string bin ) {
  int n = bin . length ( ) ;
  if ( ( bin [ n - 1 ] == '1' ) || ( bin [ n - 2 ] == '1' ) || ( bin [ n - 3 ] == '1' ) || ( bin [ n - 4 ] == '1' ) || ( bin [ n - 5 ] == '1' ) || ( bin [ n - 6 ] == '1' ) || ( bin [ n - 7 ] == '1' ) || ( bin [ n - 8 ] == '1' ) || ( bin [ n - 9 ] == '1' ) || ( bin [ n - 10 ] == '1' ) || ( bin [ n - 11 ] == '1' ) || ( bin [ n - 12 ] == '1' ) || ( bin [ n - 13 ] == '1' ) || ( bin [ n - 14 ] == '1' ) || ( bin [ n - 15 ] == '1' ) || ( bin [ n - 16 ] == '1' ) || ( bin [ n - 17 ] == '1' ) || ( bin [ n - 18 ] == '1' ) || ( bin [ n - 19 ] == '1' ) || ( bin [ n - 20 ] == '1' ) || ( bin [ n - 21 ] == '1' ) || ( bin [ n - 22 ] == '1' ) || ( bin [ n - 23 ] == '1' ) || ( bin [ n - 24 ] == '1' ) || ( bin [ n - 25 ] == '1' ) || ( bin [ n - 26 ] == '1' ) || ( bin [ n - 27 ] == '1' ) || ( bin [ n - 28 ] == '1' ) || ( bin [ n - 29 ] == '1' ) || ( bin [ n - 30 ] == '1' ) || ( bin [ n - 31 ] == '1' ) || ( bin [ n - 32 ] == '1' ) || ( bin [ n - 33 ] == '1' ) || ( bin [ n - 34 ] == '1' ) || ( bin [ n - 35 ] == '1' ) || ( bin [ n - 36 ] == '1' ) || ( bin [ n - 37 ] == '1' ) || ( bin [ n - 38 ] == '1' ) || ( bin [ n - 39 ] == '1' ) || ( bin [ n - 40 ] == '1' ) || ( bin [ n - 41 ] == '1' ) || ( bin [ n - 42 ] == '1' ) || ( bin [ n - 43 ] == '1' ) || ( bin [ n - 44 ] == '1' ) || ( bin [ n